{"name":"Awesome-python","tagline":"A curated list of awesome Python frameworks, libraries and software.","body":"# Awesome Python\r\n\r\nA curated list of awesome Python frameworks, libraries and software. Inspired by [awesome-php](https://github.com/ziadoz/awesome-php).\r\n\r\n- [Awesome Python](#awesome-python)\r\n    - [Environment Management](#environment-management)\r\n    - [Package Management](#package-management)\r\n    - [Package Repositories](#package-repositories)\r\n    - [Distribution](#distribution)\r\n    - [Build Tools](#build-tools)\r\n    - [Interactive Interpreter](#interactive-interpreter)\r\n    - [Files](#files)\r\n    - [Date and Time](#date-and-time)\r\n    - [Text Processing](#text-processing)\r\n    - [Specific Formats Processing](#specific-formats-processing)\r\n    - [Natural Language Processing](#natural-language-processing)\r\n    - [Documentation](#documentation)\r\n    - [Configuration](#configuration)\r\n    - [Command-line Tools](#command-line-tools)\r\n    - [Downloader](#downloader)\r\n    - [Imagery](#imagery)\r\n    - [Audio](#audio)\r\n    - [Video](#video)\r\n    - [Geolocation](#geolocation)\r\n    - [HTTP](#http)\r\n    - [Database](#database)\r\n    - [Database Drivers](#database-drivers)\r\n    - [ORM](#orm)\r\n    - [Web Frameworks](#web-frameworks)\r\n    - [Permissions](#permissions)\r\n    - [CMS](#cms)\r\n    - [E-commerce](#e-commerce)\r\n    - [RESTful API](#restful-api)\r\n    - [Authentication and OAuth](#authentication-and-oauth)\r\n    - [Template Engine](#template-engine)\r\n    - [Queue](#queue)\r\n    - [Search](#search)\r\n    - [News Feed](#news-feed)\r\n    - [Asset Management](#asset-management)\r\n    - [Caching](#caching)\r\n    - [Email](#email)\r\n    - [Internationalization](#internationalization)\r\n    - [URL Manipulation](#url-manipulation)\r\n    - [HTML Manipulation](#html-manipulation)\r\n    - [Web Crawling](#web-crawling)\r\n    - [Web Content Extracting](#web-content-extracting)\r\n    - [Forms](#forms)\r\n    - [Data Validation](#data-validation)\r\n    - [Anti-spam](#anti-spam)\r\n    - [Tagging](#tagging)\r\n    - [Admin Panels](#admin-panels)\r\n    - [Static Site Generator](#static-site-generator)\r\n    - [Processes and Threads](#processes-and-threads)\r\n    - [Concurrency and Networking](#concurrency-and-networking)\r\n    - [WebSocket](#websocket)\r\n    - [WSGI Servers](#wsgi-servers)\r\n    - [RPC Servers](#rpc-servers)\r\n    - [Cryptography](#cryptography)\r\n    - [GUI](#gui)\r\n    - [Game Development](#game-development)\r\n    - [Logging](#logging)\r\n    - [Testing](#testing)\r\n    - [Code Analysis and Linter](#code-analysis-and-linter)\r\n    - [Debugging Tools](#debugging-tools)\r\n    - [Science and Data Analysis](#science-and-data-analysis)\r\n    - [Data Visualization](#data-visualization)\r\n    - [Computer Vision](#computer-vision)\r\n    - [Machine Learning](#machine-learning)\r\n    - [Functional Programming](#functional-programming)\r\n    - [MapReduce](#mapreduce)\r\n    - [Third-party APIs](#third-party-apis)\r\n    - [DevOps Tools](#devops-tools)\r\n    - [Job Scheduler](#job-scheduler)\r\n    - [Foreign Function Interface](#foreign-function-interface)\r\n    - [High Performance](#high-performance)\r\n    - [Network Virtualization and SDN](#network-virtualization-and-sdn)\r\n    - [Hardware](#hardware)\r\n    - [Miscellaneous](#miscellaneous)\r\n    - [Algorithms and Design Patterns](#algorithms-and-design-patterns)\r\n    - [Editor Plugins](#editor-plugins)\r\n- [Resources](#resources)\r\n    - [Websites](#websites)\r\n    - [Weekly](#weekly)\r\n    - [Twitter](#twitter)\r\n- [Other Awesome Lists](#other-awesome-lists)\r\n- [Contributing](#contributing)\r\n\r\n---\r\n\r\n## Environment Management\r\n\r\n*Libraries for Python version and environment management.*\r\n\r\n* [pyenv](https://github.com/yyuu/pyenv) - Simple Python version management.\r\n* [virtualenv](https://pypi.python.org/pypi/virtualenv) - A tool to create isolated Python environments.\r\n* [virtualenvwrapper](https://pypi.python.org/pypi/virtualenvwrapper) - A set of extensions to virtualenv\r\n* [virtualenv-api](https://github.com/sjkingo/virtualenv-api) - An API for virtualenv and pip.\r\n* [pew](https://pypi.python.org/pypi/pew/) - A set of tools to manage multiple virtual environments.\r\n* [Vex](https://github.com/sashahart/vex) - Run a command in the named virtualenv.\r\n* [PyRun](https://www.egenix.com/products/python/PyRun/) - A one-file, no-installation-needed version of Python.\r\n\r\n## Package Management\r\n\r\n*Libraries for package and dependency management.*\r\n\r\n* [pip](https://pip.pypa.io/) - The Python package and dependency manager.\r\n    * [Python Package Index](https://pypi.python.org/pypi)\r\n* [conda](https://github.com/conda/conda/) - Cross-platform, Python-agnostic binary package manager.\r\n* [Curdling](http://clarete.li/curdling/) - Curdling is a command line tool for managing Python packages.\r\n* [wheel](http://pythonwheels.com/) - The new standard of Python distribution and are intended to replace eggs.\r\n\r\n## Package Repositories\r\n\r\n*Local PyPI repository server and proxies.*\r\n\r\n* [warehouse](https://github.com/pypa/warehouse) - Next generation Python Package Repository (PyPI).\r\n    * [Warehouse](https://warehouse.python.org/)\r\n* [devpi](http://doc.devpi.net/) - PyPI server and packaging/testing/release tool.\r\n* [localshop](https://github.com/mvantellingen/localshop) - PyPI server which mirrors official packages on-demand, and also supports local (private) package uploads.\r\n\r\n## Distribution\r\n\r\n*Libraries to create packaged executables for release distribution.*\r\n\r\n* [cx-Freeze](http://cx-freeze.readthedocs.org/) - Freezes Python scripts (cross-platform).\r\n* [py2exe](http://www.py2exe.org/) - Freezes Python scripts (Windows).\r\n* [pynsist](http://pynsist.readthedocs.org/) - A tool to build Windows installers, installers bundle Python itself.\r\n* [py2app](http://pythonhosted.org/py2app/) - Freezes Python scripts (Mac OS X).\r\n* [PyInstaller](http://www.pyinstaller.org/) - Converts Python programs into stand-alone executables (cross-platform).\r\n* [dh-virtualenv](http://dh-virtualenv.readthedocs.org/) - Build and distribute a virtualenv as a Debian package.\r\n\r\n## Build Tools\r\n\r\n*Compile software from source code.*\r\n\r\n* [buildout](http://www.buildout.org/) - A build system for creating, assembling and deploying applications from multiple parts, some of which may be non-Python-based.\r\n* [SCons](http://www.scons.org/) - A software construction tool.\r\n* [PlatformIO](https://github.com/ivankravets/platformio) - A console tool to build code with different development platforms.\r\n* [BitBake](http://www.yoctoproject.org/docs/1.6/bitbake-user-manual/bitbake-user-manual.html) - A make-like build tool with the special focus of distributions and packages for embedded Linux.\r\n* [fabricate](https://code.google.com/p/fabricate/) - A build tool that finds dependencies automatically for any language.\r\n\r\n## Interactive Interpreter\r\n\r\n*Interactive Python interpreters.*\r\n\r\n* [IPython](https://github.com/ipython/ipython) - A rich toolkit to help you make the most out of using Python interactively.\r\n* [bpython](http://bpython-interpreter.org) â€“ A fancy interface to the Python interpreter.\r\n\r\n## Files\r\n\r\n*Libraries for file manipulation and MIME type detection.*\r\n\r\n* [mimetypes](https://docs.python.org/2/library/mimetypes.html) - (Python standard library) Map filenames to MIME types.\r\n* [imghdr](https://docs.python.org/2/library/imghdr.html) - (Python standard library) Determine the type of an image.\r\n* [python-magic](https://github.com/ahupp/python-magic) - A Python interface to the libmagic file type identification library.\r\n* [path.py](https://github.com/jaraco/path.py) - A module wrapper for [os.path](https://docs.python.org/2/library/os.path.html).\r\n* [watchdog](https://github.com/gorakhargosh/watchdog) - API and shell utilities to monitor file system events.\r\n* [Unipath](https://github.com/mikeorr/Unipath) - An object-oriented approach to file/directory operations.\r\n* [pathlib](https://pathlib.readthedocs.org/en/pep428/) - (Python standard library in Python 3.4+) An cross-platform, object-oriented path library.\r\n\r\n## Date and Time\r\n\r\n*Libraries for working with dates and times.*\r\n\r\n* [arrow](https://github.com/crsmithdev/arrow) - Better dates & times for Python.\r\n* [dateutil](https://pypi.python.org/pypi/python-dateutil) - Extensions to the standard Python [datetime](https://docs.python.org/2/library/datetime.html) module.\r\n* [delorean](https://github.com/myusuf3/delorean/) - A library for clearing up the inconvenient truths that arise dealing with datetimes.\r\n* [when.py](https://github.com/dirn/When.py) - Providing user-friendly functions to help perform common date and time actions.\r\n* [moment](https://github.com/zachwill/moment) - A Python library for dealing with dates/times. Inspired by [Moment.js](http://momentjs.com/).\r\n* [pytz](https://launchpad.net/pytz) - World timezone definitions, modern and historical. Brings the [tz database](http://en.wikipedia.org/wiki/Tz_database) into Python.\r\n\r\n## Text Processing\r\n\r\n*Libraries for parsing and manipulating plain texts.*\r\n\r\n* General\r\n    * [difflib](https://docs.python.org/2/library/difflib.html) - (Python standard library) Helpers for computing deltas.\r\n    * [Levenshtein](https://github.com/ztane/python-Levenshtein/) - Fast computation of Levenshtein distance and string similarity.\r\n    * [fuzzywuzzy](https://github.com/seatgeek/fuzzywuzzy) - Fuzzy String Matching.\r\n    * [esmre](https://code.google.com/p/esmre/) - Regular expression accelerator.\r\n    * [shortuuid](https://github.com/stochastic-technologies/shortuuid) - A generator library for concise, unambiguous and URL-safe UUIDs.\r\n    * [ftfy](https://github.com/LuminosoInsight/python-ftfy) - Makes Unicode text less broken and more consistent automagically.\r\n    * [unidecode](https://pypi.python.org/pypi/Unidecode) - ASCII transliterations of Unicode text.\r\n    * [chardet](https://github.com/chardet/chardet) - Python 2/3 compatible character encoding detector.\r\n    * [xpinyin](https://github.com/lxneng/xpinyin) - A library to translate Chinese hanzi (æ¼¢å­—) to pinyin (æ‹¼éŸ³).\r\n    * [pangu.py](https://github.com/vinta/pangu.py) - Spacing texts for CJK and alphanumerics.\r\n    * [pyfiglet](https://github.com/pwaller/pyfiglet) - An implementation of figlet written in Python.\r\n* Slugify\r\n    * [awesome-slugify](https://github.com/dimka665/awesome-slugify) - A Python slugify library that can preserve unicode.\r\n    * [python-slugify](https://github.com/un33k/python-slugify) - A Python slugify library that translates unicode to ASCII.\r\n    * [unicode-slugify](https://github.com/mozilla/unicode-slugify) - A slugifier that generates unicode slugs with Django as a dependency.\r\n* Parser\r\n    * [phonenumbers](https://github.com/daviddrysdale/python-phonenumbers) - Parsing, formatting, storing and validating international phone numbers.\r\n    * [python-user-agents](https://github.com/selwin/python-user-agents) - Browser user agent parser.\r\n    * [sqlparse](https://sqlparse.readthedocs.org/) - A non-validating SQL parser.\r\n    * [Pygments](http://pygments.org/) - A generic syntax highlighter.\r\n    * [python-nameparser](https://github.com/derek73/python-nameparser) - Parsing human names into their individual components.\r\n    * [pyparsing](http://pyparsing.wikispaces.com/) - A general purpose framework for generating parsers.\r\n\r\n## Specific Formats Processing\r\n\r\n*Libraries for parsing and manipulating specific text formats.*\r\n\r\n* General\r\n    * [tablib](https://github.com/kennethreitz/tablib) - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\r\n* Office\r\n    * [python-docx](https://github.com/python-openxml/python-docx) - Reads, queries and modifies Microsoft Word 2007/2008 docx files.\r\n    * [xlwt](https://github.com/python-excel/xlwt) / [xlrd](https://github.com/python-excel/xlrd) - Writing and reading data and formatting information from Excel files.\r\n    * [XlsxWriter](https://xlsxwriter.readthedocs.org/) - A Python module for creating Excel .xlsx files.\r\n    * [Marmir](https://github.com/brianray/mm) - Takes Python data structures and turns them into spreadsheets.\r\n* PDF\r\n    * [PDFMiner](https://github.com/euske/pdfminer) - A tool for extracting information from PDF documents.\r\n    * [PyPDF2](https://github.com/mstamy2/PyPDF2) - A library capable of splitting, merging and transforming PDF pages.\r\n* Markdown\r\n    * [Python-Markdown](https://github.com/waylan/Python-Markdown) - A Python implementation of John Gruberâ€™s Markdown.\r\n    * [Mistune](https://github.com/lepture/mistune) - Fastest and full featured pure Python parsers of Markdown.\r\n* YAML\r\n    * [PyYAML](http://pyyaml.org/) - YAML implementations for Python.\r\n* Archive\r\n    * [unp](https://github.com/mitsuhiko/unp) - A command line tool that can unpack archives easily.\r\n\r\n## Natural Language Processing\r\n\r\n*Libraries for working with human languages.*\r\n\r\n* [NLTK](http://www.nltk.org/) - A leading platform for building Python programs to work with human language data.\r\n* [Pattern](http://www.clips.ua.ac.be/pattern) - A web mining module for the Python. It has tools for natural language processing, machine learning, among others.\r\n* [TextBlob](http://textblob.readthedocs.org/) - Providing a consistent API for diving into common NLP tasks. Stands on the giant shoulders of NLTK and Pattern.\r\n* [jieba](https://github.com/fxsjy/jieba#jieba-1) - Chinese Words Segementation Utilities.\r\n* [SnowNLP](https://github.com/isnowfy/snownlp) - A library for processing Chinese text.\r\n* [loso](https://github.com/victorlin/loso) - Another Chinese segmentation library.\r\n* [genius](https://github.com/duanhongyi/genius) - A Chinese segment base on Conditional Random Field.\r\n\r\n## Documentation\r\n\r\n*Libraries for generating project documentation.*\r\n\r\n* [Sphinx](http://sphinx-doc.org/) - Python Documentation generator.\r\n* [reStructuredText](http://docutils.sourceforge.net/rst.html) - Markup Syntax and Parser Component of Docutils.\r\n* [MkDocs](http://www.mkdocs.org/) - Markdown friendly documentation generator.\r\n* [Pycco](http://fitzgen.github.io/pycco/) - The original quick-and-dirty, hundred-line-long, literate-programming-style documentation generator.\r\n* [pdoc](https://github.com/BurntSushi/pdoc) - Epydoc replacement to auto generate API documentation for Python libraries.\r\n\r\n## Configuration\r\n\r\n*Libraries for storing configuration options.*\r\n\r\n* [ConfigParser](https://docs.python.org/2/library/configparser.html) - (Python standard library) INI file parser.\r\n* [ConfigObj](http://www.voidspace.org.uk/python/configobj.html) - INI file parser with validation.\r\n* [config](http://www.red-dove.com/config-doc/) - Hierarchical config from the author of [logging](https://docs.python.org/2/library/logging.html).\r\n* [profig](http://profig.readthedocs.org/) - Config from multiple formats with value conversion.\r\n\r\n## Command-line Tools\r\n\r\n*Libraries for building command-line application.*\r\n\r\n* Command-line Application Development\r\n    * [cement](http://builtoncement.org/) - Cement provides a light-weight and fully featured foundation to build anything from single file scripts to complex and intricately designed applications.\r\n    * [click](http://click.pocoo.org/) - A package for creating beautiful command line interfaces in a composable way.\r\n    * [clint](https://github.com/kennethreitz/clint) - Python Command-line Application Tools.\r\n    * [cliff](https://cliff.readthedocs.org/) - A framework for creating command-line programs with multi-level commands.\r\n    * [Clime](http://clime.mosky.tw) â€“ Clime lets you convert any module into a multi-command CLI program without any configuration.\r\n    * [docopt](http://docopt.org/) - Pythonic command line arguments parser.\r\n    * [colorama](https://pypi.python.org/pypi/colorama) - Cross-platform colored terminal text.\r\n    * [pyCLI](https://pythonhosted.org/pyCLI/) - Command-line applications supporting standard command line parsing, logging, unit and functional testing.\r\n    * [Gooey](https://github.com/chriskiehl/Gooey) - Turn command line programs into a full GUI application with one line\r\n* Productivity Tools\r\n    * [cookiecutter](https://github.com/audreyr/cookiecutter) - A command-line utility that creates projects from cookiecutters (project templates). E.g. Python package projects, jQuery plugin projects.\r\n    * [httpie](https://github.com/jakubroztocil/httpie) - A command line HTTP client, a user-friendly cURL replacement.\r\n    * [percol](https://github.com/mooz/percol) - Adds flavor of interactive selection to the traditional pipe concept on UNIX.\r\n    * [RainbowStream](http://www.rainbowstream.org/) - Smart and nice Twitter client on terminal.\r\n\r\n## Downloader\r\n\r\n*Libraries for downloading.*\r\n\r\n* [s3cmd](https://github.com/s3tools/s3cmd) - A command line tool for managing Amazon S3 and CloudFront.\r\n* [youtube-dl](http://rg3.github.io/youtube-dl/) - A small command-line program to download videos from YouTube.\r\n* [you-get](http://www.soimort.org/you-get/) - A YouTube/Youku/Niconico video downloader written in Python 3.\r\n* [coursera](https://github.com/coursera-dl/coursera) - Script for downloading Coursera.org videos and naming them.\r\n* [WikiTeam](https://github.com/WikiTeam/wikiteam) - Tools for downloading and preserving wikis.\r\n* [subliminal](https://github.com/Diaoul/subliminal) - Library and command line tool to search and download subtitles.\r\n\r\n## Imagery\r\n\r\n*Libraries for manipulating images.*\r\n\r\n* [pillow](http://pillow.readthedocs.org/) - Pillow is the friendly [PIL](http://www.pythonware.com/products/pil/) fork.\r\n* [wand](https://github.com/dahlia/wand) - Python bindings for [MagickWand](http://www.imagemagick.org/script/magick-wand.php), C API for ImageMagick.\r\n* [thumbor](https://github.com/thumbor/thumbor) - A smart imaging service. It enables on-demand crop, resizing and flipping of images.\r\n* [imgSeek](http://www.imgseek.net/) - A project for searching a collection of images using visual similarity.\r\n* [python-qrcode](https://github.com/lincolnloop/python-qrcode) - A pure Python QR Code generator.\r\n* [pyBarcode](https://pythonhosted.org/pyBarcode/) - Create barcodes in Python without needing PIL.\r\n* [pygram](https://github.com/ajkumar25/pygram) - Instagram-like image filters.\r\n* [Quads](https://github.com/fogleman/Quads) - Computer art based on quadtrees.\r\n* [nude.py](https://github.com/hhatto/nude.py) - Nudity detection.\r\n* [scikit-image](http://scikit-image.org/) - A Python library for (scientific) image processing.\r\n* [hmap](https://github.com/rossgoodwin/hmap) - Image histogram remapping.\r\n\r\n## Audio\r\n\r\n*Libraries for manipulating audio.*\r\n\r\n* [audiolazy](https://github.com/danilobellini/audiolazy) - Expressive Digital Signal Processing (DSP) package for Python.\r\n* [audioread](https://github.com/sampsyo/audioread) - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\r\n* [beets](http://beets.radbox.org/) - A music library manager and [MusicBrainz](https://musicbrainz.org/) tagger.\r\n* [dejavu](https://github.com/worldveil/dejavu) - Audio fingerprinting and recognition.\r\n* [django-elastic-transcoder](https://github.com/StreetVoice/django-elastic-transcoder) - Django + [Amazon Elastic Transcoder](http://aws.amazon.com/elastictranscoder/).\r\n* [eyeD3](http://eyed3.nicfit.net/) - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\r\n* [id3reader](http://nedbatchelder.com/code/modules/id3reader.py) - A Python module for reading MP3 meta data.\r\n* [mutagen](https://code.google.com/p/mutagen/) - A Python module to handle audio metadata.\r\n* [pydub](https://github.com/jiaaro/pydub) - Manipulate audio with a simple and easy high level interface.\r\n* [pyechonest](https://github.com/echonest/pyechonest) - Python client for the [Echo Nest](http://developer.echonest.com/docs/) API.\r\n* [talkbox](http://scikits.appspot.com/talkbox) - A Python library for speech/signal processing.\r\n* [TimeSide](https://github.com/yomguy/TimeSide) - Open web audio processing framework.\r\n* [tinytag](https://github.com/devsnd/tinytag) - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\r\n* [m3u8](https://github.com/globocom/m3u8) - A module for parsing m3u8 file.\r\n\r\n## Video\r\n\r\n*Libraries for manipulating video and GIFs.*\r\n\r\n* [moviepy](http://zulko.github.io/moviepy/) - A module for script-based movie editing with many formats, including animated GIFs.\r\n* [shorten.tv](http://www.shorten.tv/) - Video summarization.\r\n* [scikit-video](https://github.com/aizvorski/scikit-video) - Video processing routines for SciPy.\r\n\r\n## Geolocation\r\n\r\n*Libraries for geocoding addresses and working with latitudes and longitudes.*\r\n\r\n* [GeoDjango](https://docs.djangoproject.com/en/dev/ref/contrib/gis/) - A world-class geographic web framework.\r\n* [geopy](https://github.com/geopy/geopy) - Python Geocoding Toolbox.\r\n* [pygeoip](https://github.com/appliedsec/pygeoip) - Pure Python GeoIP API.\r\n* [GeoIP](https://github.com/maxmind/geoip-api-python) - Python API for MaxMind GeoIP Legacy Database.\r\n* [geojson](https://github.com/frewsxcv/python-geojson) - Python bindings and utlities for GeoJSON.\r\n* [django-countries](https://github.com/SmileyChris/django-countries) - A Django app that provides country choices for use with forms, flag icons static files, and a country field for models.\r\n\r\n## HTTP\r\n\r\n*Libraries for working with HTTP.*\r\n\r\n* [requests](http://docs.python-requests.org/) - HTTP Requests for Humansâ„¢.\r\n* [grequests](https://github.com/kennethreitz/grequests) - requests + gevent for asynchronous HTTP requests.\r\n* [urllib3](https://github.com/shazow/urllib3) - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\r\n* [httplib2](https://github.com/jcgregorio/httplib2) - Comprehensive HTTP client library.\r\n* [treq](https://github.com/dreid/treq) - Python requests like API built on top of Twisted's HTTP client.\r\n\r\n## Database\r\n\r\n*Databases implemented in Python.*\r\n\r\n* [ZODB](http://www.zodb.org/) - A native object database for Python. A key-value and object graph database.\r\n* [pickleDB](https://pythonhosted.org/pickleDB/) - A simple and lightweight key-value store for Python. \r\n\r\n## Database Drivers\r\n\r\n*Libraries for connecting and operating databases.*\r\n\r\n* Relational Databases\r\n    * [mysql-python](http://sourceforge.net/projects/mysql-python/) - The MySQL database connector for Python.\r\n    * [mysqlclient](https://github.com/PyMySQL/mysqlclient-python) - mysql-python fork supporting Python 3.\r\n    * [PyMySQL](https://github.com/PyMySQL/PyMySQL) - Pure Python MySQL driver compatible to mysql-python.\r\n    * [mysql-connector-python](https://pypi.python.org/pypi/mysql-connector-python) - A pure Python MySQL driver from Oracle.\r\n    * [oursql](https://pythonhosted.org/oursql/) - A better MySQL connector with support for native prepared statements and BLOBs.\r\n    * [psycopg2](http://initd.org/psycopg/) - The most popular PostgreSQL adapter for Python.\r\n    * [txpostgres](http://txpostgres.readthedocs.org/) - Twisted based asynchronous driver for PostgreSQL.\r\n    * [queries](https://github.com/gmr/queries) - A wrapper of the psycopg2 library for interacting with PostgreSQL.\r\n    * [dataset](https://github.com/pudo/dataset) - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\r\n* NoSQL Databases\r\n    * [cassandra-python-driver](https://github.com/datastax/python-driver) - Python driver for Cassandra.\r\n    * [pycassa](https://github.com/pycassa/pycassa) - Python Thrift driver for Cassandra.\r\n    * [HappyBase](http://happybase.readthedocs.org/) - A developer-friendly library for Apache HBase.\r\n    * [PyMongo](http://docs.mongodb.org/ecosystem/drivers/python/) - The official Python client for MongoDB.\r\n    * [Plyvel](https://plyvel.readthedocs.org/) - A fast and feature-rich Python interface to LevelDB.\r\n    * [redis-py](https://github.com/andymccurdy/redis-py) - The Redis Python Client.\r\n    * [py2neo](http://book.py2neo.org/) - Python wrapper client for Neo4j's restful interface.\r\n    * [telephus](https://github.com/driftx/Telephus) - Twisted based client for Cassandra.\r\n    * [txRedis](https://github.com/deldotdr/txRedis) - Twisted based client for Redis.\r\n\r\n## ORM\r\n\r\n*Libraries that implement Object-Relational Mapping or datamapping techniques.*\r\n\r\n* Relational Databases\r\n    * [Django Models](https://docs.djangoproject.com/en/dev/topics/db/models/) - A part of Django.\r\n    * [SQLAlchemy](http://www.sqlalchemy.org/) - The Python SQL Toolkit and Object Relational Mapper.\r\n    * [peewee](https://github.com/coleifer/peewee) - A small, expressive ORM.\r\n    * [PonyORM](http://ponyorm.com) - ORM that provides a generator-oriented interface to SQL.\r\n* NoSQL Databases\r\n    * [MongoEngine](http://mongoengine.org/) - A Python Object-Document-Mapper for working with MongoDB.\r\n    * [django-mongodb-engine](https://github.com/django-nonrel/mongodb-engine) - Django MongoDB Backend.\r\n    * [redisco](https://github.com/kiddouk/redisco) - A Python Library for Simple Models and Containers Persisted in Redis.\r\n* Others\r\n    * [butterdb](https://github.com/Widdershin/butterdb) - A Python ORM for Google Drive Spreadsheets.\r\n\r\n## Web Frameworks\r\n\r\n*Full stack web frameworks.*\r\n\r\n* [Django](https://www.djangoproject.com/) - The most popular web framework in Python.\r\n    * [awesome-django](https://github.com/rosarior/awesome-django)\r\n* [Flask](http://flask.pocoo.org/) - A microframework for Python.\r\n    * [awesome-flask](https://github.com/humiaozuzu/awesome-flask)\r\n* [Bottle](http://bottlepy.org/) - A fast, simple and lightweight WSGI micro web-framework.\r\n* [Pyramid](http://www.pylonsproject.org/) - A small, fast, down-to-earth, open source Python web framework.\r\n* [web2py](http://www.web2py.com) - A full stack web framework and platform focused in the ease of use.\r\n* [web.py](http://webpy.org/) - A web framework for Python that is as simple as it is powerful.\r\n* [TurboGears](http://www.turbogears.org/) - The Web Framework that starts as a microframework and scales up to a fullstack solution.\r\n* [CherryPy](http://www.cherrypy.org/) - A Minimalist Python Web Framework, HTTP/1.1-compliant and WSGI thread-pooled.\r\n* [Grok](http://grok.zope.org/) - A framework built on the existing Zope 3 libraries.\r\n* [Bluebream](http://bluebream.zope.org/) - An open-source web application server, framework and library, formerly known as Zope 3.\r\n* [guava](https://github.com/flatpeach/guava) - A lightweight and high performance web framework for Python written in C.\r\n\r\n## Permissions\r\n\r\n*Libraries that allow or deny users access to data or functionality.*\r\n\r\n* [django-guardian](https://github.com/lukaszb/django-guardian) - Implementation of per object permissions for Django 1.2+\r\n* [Carteblanche](http://www.github.com/neuman/python-carteblanche/) - Module to align code with thoughts of users and designers. Also magically handles navigation and permissions.\r\n\r\n## CMS\r\n\r\n*Content Management Systems.*\r\n\r\n* [django-cms](https://www.django-cms.org/en/) - An Open source enterprise CMS based on the Django.\r\n* [djedi-cms](http://djedi-cms.org/) - A lightweight but yet powerful Django CMS with plugins, inline editing and performance in mind.\r\n* [FeinCMS](http://www.feincms.org/) - One of the most advanced Content Management Systems built on Django.\r\n* [Kotte](http://kotti.pylonsproject.org/) - A high-level, Pythonic web application framework built on Pyramid.\r\n* [Mezzanine](http://mezzanine.jupo.org/) - A powerful, consistent, and flexible content management platform.\r\n* [Opps](http://oppsproject.org/) - A Django-based CMS for magazines, newspapers websites and portals with high-traffic.\r\n* [Plone](http://plone.org/) - A CMS built on top of the open source application server Zope.\r\n* [Quokka](http://quokkaproject.org/) - Flexible, extensible, small CMS powered by Flask and MongoDB.\r\n* [Wagtail](http://wagtail.io/) - A Django content management system.\r\n* [Widgy](http://wid.gy/) - Last CMS framework, based on Django.\r\n\r\n## E-commerce\r\n\r\n*Frameworks and libraries for e-commerce and payments.*\r\n\r\n* [django-oscar](http://oscarcommerce.com/) - An open-source e-commerce framework for Django.\r\n* [django-shop](https://www.django-cms.org/) - A Django based shop system.\r\n* [merchant](https://github.com/agiliq/merchant) - A Django app to accept payments from various payment processors.\r\n* [money](https://github.com/carlospalol/money) - Money class with optional CLDR-backed locale-aware formatting and an extensible currency exchange solution.\r\n\r\n## RESTful API\r\n\r\n*Libraries for developing RESTful APIs.*\r\n\r\n* [cornice](https://cornice.readthedocs.org/) - A REST framework for Pyramid.\r\n* [django-rest-framework](http://www.django-rest-framework.org/) - A powerful and flexible toolkit that makes it easy to build Web APIs.\r\n* [django-tastypie](http://tastypieapi.org/) - Creating delicious APIs for Django apps.\r\n* [django-formapi](https://github.com/5monkeys/django-formapi) - Create JSON APIs with HMAC authentication and Django form-validation.\r\n* [flask-api](http://www.flaskapi.org/) - An implementation of the same web browsable APIs that django-rest-framework provides.\r\n* [flask-restful](http://flask-restful.readthedocs.org/) - An extension for Flask that adds support for quickly building REST APIs.\r\n* [flask-api-utils](https://github.com/marselester/flask-api-utils) - Flask extension that takes care of API representation and authentication.\r\n* [falcon](http://falconframework.org/) - A high-performance Python framework for building cloud APIs and web app backends.\r\n* [eve](https://github.com/nicolaiarocci/eve) - REST API framework powered by Flask, MongoDB and good intentions.\r\n* [sandman](https://github.com/jeffknupp/sandman) - Automated REST APIs for existing database-driven systems.\r\n* [restless](http://restless.readthedocs.org/en/latest/) - Framework agnostic REST framework based on lessons learned from TastyPie.\r\n* [savory-pie](https://github.com/RueLaLa/savory-pie/) - REST API building library (django, and others)\r\n\r\n## Authentication and OAuth\r\n\r\n*Libraries for implementing authentications schemes.*\r\n\r\n* [Authomatic](http://peterhudec.github.io/authomatic/) - Simple but powerful framework agnostic authentication/authorization client package.\r\n* [OAuthLib](https://github.com/idan/oauthlib) - A generic, spec-compliant, thorough implementation of the OAuth request-signing logic.\r\n* [rauth](https://github.com/litl/rauth) - A Python library for OAuth 1.0/a, 2.0, and Ofly.\r\n* [python-oauth2](https://github.com/simplegeo/python-oauth2) - A fully tested, abstract interface to creating OAuth clients and servers.\r\n* [python-social-auth](https://github.com/omab/python-social-auth) - An easy-to-setup social authentication mechanism.\r\n* [django-oauth-toolkit](https://github.com/evonove/django-oauth-toolkit) - OAuth2 goodies for the Djangonauts.\r\n* [django-oauth2-provider](https://github.com/caffeinehit/django-oauth2-provider) - Providing OAuth2 access to Django app.\r\n* [django-allauth](https://github.com/pennersr/django-allauth) - Authentication app for Django that \"just works.\"\r\n* [Flask-OAuthlib](https://github.com/lepture/flask-oauthlib) - OAuth 1.0/a, 2.0 implementation of client and provider for Flask.\r\n* [sanction](https://github.com/demianbrecht/sanction) - A dead simple OAuth2 client implementation.\r\n* [jose](https://github.com/demonware/jose) - JavaScript Object Signing and Encryption (JOSE) draft implementation, useful for stateful tokens.\r\n\r\n## Template Engine\r\n\r\n*Libraries and tools for templating and lexing.*\r\n\r\n* [Jinja2](https://github.com/mitsuhiko/jinja2) - A modern and designer friendly templating language.\r\n* [Genshi](http://genshi.edgewall.org/) - Python templating toolkit for generation of web-aware output.\r\n* [Mako](http://www.makotemplates.org/) - Hyperfast and lightweight templating for the Python platform.\r\n* [Chameleon](https://chameleon.readthedocs.org/) - An HTML/XML template engine for Python. Modeled after ZPT, optimized for speed.\r\n* [Spitfire](https://code.google.com/p/spitfire/) - A very fast Python template compiler.\r\n\r\n## Queue\r\n\r\n*Libraries for working with event and task queues.*\r\n\r\n* [celery](http://www.celeryproject.org/) - An asynchronous task queue/job queue based on distributed message passing.\r\n* [huey](https://github.com/coleifer/huey) - Little multi-threaded task queue.\r\n* [mrq](https://github.com/pricingassistant/mrq) - Mr. Queue - A distributed worker task queue in Python using Redis & gevent.\r\n* [rq](http://python-rq.org/) - Simple job queues for Python.\r\n* [simpleq](https://github.com/rdegges/simpleq) - A simple, infinitely scalable, Amazon SQS based queue.\r\n\r\n## Search\r\n\r\n*Libraries and software for indexing and performing search queries on data.*\r\n\r\n* [django-haystack](https://github.com/toastdriven/django-haystack) - Modular search for Django.\r\n* [elasticsearch-py](http://www.elasticsearch.org/guide/en/elasticsearch/client/python-api/current/) - The official low-level Python client for [Elasticsearch](http://www.elasticsearch.org/).\r\n* [solrpy](https://code.google.com/p/solrpy/) - A Python client for [solr](http://lucene.apache.org/solr/).\r\n* [Whoosh](http://whoosh.readthedocs.org/) - A fast, pure Python search engine library.\r\n\r\n## News Feed\r\n\r\n*Libraries for building user's activities.*\r\n\r\n* [Feedly](https://github.com/tschellenbach/Feedly) - A library which allows you to build newsfeed and notification systems using Cassandra and Redis.\r\n* [django-activity-stream](https://github.com/justquick/django-activity-stream) - Generate generic activity streams from the actions on your site.\r\n\r\n## Asset Management\r\n\r\n*Tools for managing, compressing and minifying website assets.*\r\n\r\n* [django-compressor](https://github.com/django-compressor/django-compressor) - Compresses linked and inline javascript or CSS into a single cached file.\r\n* [jinja-assets-compressor](https://github.com/jaysonsantos/jinja-assets-compressor) - A Jinja extension to compile and compress your assets.\r\n* [webassets](http://webassets.readthedocs.org/) - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\r\n* [fanstatic](http://www.fanstatic.org/) - Packages, optimizes, and serves static file dependencies as Python packages.\r\n* [fileconveyor](http://fileconveyor.org/) - Monitors changes, processes, and transports assets to CDNs and file storage systems.\r\n* [django-storages](http://code.larlet.fr/django-storages/) - A collection of custom storage backends for Django.\r\n* [glue](http://gluecss.com) - Glue is a simple command line tool to generate CSS sprites.\r\n* [libsass-python](http://hongminhee.org/libsass-python/) - A Python binding of [libsass](https://github.com/hcatlin/libsass), the reference implementation of SASS/SCSS.\r\n* [Flask-Assets](http://flask-assets.readthedocs.org/) - Helps you integrate webassets into your Flask app.\r\n\r\n## Caching\r\n\r\n*Libraries for caching data.*\r\n\r\n* [Beaker](http://beaker.readthedocs.org/) - A library for caching and sessions for use with web applications and stand-alone Python scripts and applications.\r\n* [dogpile.cache](http://dogpilecache.readthedocs.org/) - dogpile.cache is next generation replacement for Beaker made by same authors.\r\n* [HermesCache](https://pypi.python.org/pypi/HermesCache) - Python caching library with tag-based invalidation and dogpile effect prevention.\r\n* [django-cache-machine](https://github.com/jbalogh/django-cache-machine) - Automatic caching and invalidation for Django models through the ORM.\r\n* [django-cacheops](https://github.com/Suor/django-cacheops) - A slick ORM cache with automatic granular event-driven invalidation.\r\n* [johnny-cache](https://github.com/jmoiron/johnny-cache) - A caching framework for django applications.\r\n* [django-viewlet](https://github.com/5monkeys/django-viewlet) - Render template parts with extended cache control.\r\n* [pylibmc](https://github.com/lericson/pylibmc) - A Python wrapper around the [libmemcached](http://libmemcached.org/libMemcached.html) interface.\r\n\r\n## Email\r\n\r\n*Libraries for sending and parsing email.*\r\n\r\n* [inbox.py](https://github.com/kennethreitz/inbox.py) - Python SMTP Server for Humans.\r\n* [imbox](https://github.com/martinrusev/imbox) - Python IMAP for Humans.\r\n* [inbox](https://github.com/inboxapp/inbox) - The open source email toolkit.\r\n* [lamson](https://github.com/zedshaw/lamson) - Pythonic SMTP Application Server.\r\n* [flanker](https://github.com/mailgun/flanker) - A email address and Mime parsing library.\r\n* [marrow.mailer](https://github.com/marrow/marrow.mailer) - High-performance extensible mail delivery framework.\r\n* [django-celery-ses](https://github.com/StreetVoice/django-celery-ses) - Django email backend with AWS SES and Celery.\r\n* [modoboa](https://github.com/tonioo/modoboa) - A mail hosting and management platform including a modern and simplified Web UI.\r\n* [envelopes](http://tomekwojcik.github.io/envelopes/) - Mailing for human beings.\r\n* [mailjet](https://github.com/WoLpH/mailjet) - Mailjet API implementation for batch mailing, statistics and more.\r\n* [Talon](https://github.com/mailgun/talon) - Mailgun library to extract message quotations and signatures.\r\n* [pyzmail](http://www.magiksys.net/pyzmail/) - Compose, send and parse emails.\r\n\r\n## Internationalization\r\n\r\n*Libraries for woking with i18n.*\r\n\r\n* [Babel](http://babel.pocoo.org/) - An internationalization library for Python.\r\n\r\n## URL Manipulation\r\n\r\n*Libraries for parsing URLs.*\r\n\r\n* [furl](https://github.com/gruns/furl) - A small Python library that makes manipulating URLs simple.\r\n* [purl](https://github.com/codeinthehole/purl) - A simple, immutable URL class with a clean API for interrogation and manipulation.\r\n* [pyshorteners](https://github.com/ellisonleao/pyshorteners) - A pure Python URL shortening lib.\r\n\r\n## HTML Manipulation\r\n\r\n*Libraries for working with HTML and XML.*\r\n\r\n* [BeautifulSoup](http://www.crummy.com/software/BeautifulSoup/bs4/doc/) - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\r\n* [lxml](http://lxml.de/) - A very fast, easy-to-use and versatile library for handling HTML and XML.\r\n* [html5lib](https://github.com/html5lib/html5lib-python) - A standards-compliant library for parsing and serializing HTML documents and fragments.\r\n* [pyquery](https://github.com/gawel/pyquery) - A jQuery-like library for parsing HTML.\r\n* [cssutils](https://pypi.python.org/pypi/cssutils/) - A CSS library for Python.\r\n* [MarkupSafe](https://github.com/mitsuhiko/markupsafe) - Implements a XML/HTML/XHTML Markup safe string for Python.\r\n* [bleach](http://bleach.readthedocs.org/) - A whitelist-based HTML sanitization and text linkification library.\r\n* [xmltodict](https://github.com/martinblech/xmltodict) - Working with XML feel like you are working with JSON.\r\n* [xhtml2pdf](https://github.com/chrisglass/xhtml2pdf) - HTML/CSS to PDF converter.\r\n* [untangle](https://github.com/stchris/untangle) - Converts XML documents to Python objects for easy access.\r\n\r\n## Web Crawling\r\n\r\n*Libraries for scraping websites.*\r\n\r\n* [Scrapy](http://scrapy.org/) - A fast high-level screen scraping and web crawling framework.\r\n* [portia](https://github.com/scrapinghub/portia) - Visual scraping for Scrapy.\r\n* [feedparser](http://pythonhosted.org/feedparser/) - Universal feed parser.\r\n* [RoboBrowser](https://github.com/jmcarp/robobrowser) - A simple, Pythonic library for browsing the web without a standalone web browser.\r\n* [MechanicalSoup](https://github.com/hickford/MechanicalSoup) - A Python library for automating interaction with websites.\r\n* [mechanize](http://wwwsearch.sourceforge.net/mechanize/) - Stateful programmatic web browsing.\r\n* [Demiurge](https://github.com/matiasb/demiurge) - PyQuery-based scraping micro-framework.\r\n\r\n## Web Content Extracting\r\n\r\n*Libraries for extracting web contents.*\r\n\r\n* [newspaper](https://github.com/codelucas/newspaper) - News extraction, article extraction and content curation in Python.\r\n* [html2text](https://github.com/Alir3z4/html2text) - Convert HTML to Markdown-formatted text.\r\n* [python-goose](https://github.com/grangier/python-goose) - HTML Content/Article Extractor.\r\n* [lassie](https://github.com/michaelhelmick/lassie) - Web Content Retrieval for Humans.\r\n* [micawber](https://github.com/coleifer/micawber) - A small library for extracting rich content from URLs.\r\n* [sumy](https://github.com/miso-belica/sumy) - A module for automatic summarization of text documents and HTML pages.\r\n* [Haul](https://github.com/vinta/Haul) - An Extensible Image Crawler.\r\n* [python-readability](https://github.com/buriy/python-readability) - Fast Python port of arc90's readability tool.\r\n* [opengraph](https://github.com/erikriver/opengraph) - A Python module to parse the Open Graph Protocol\r\n* [textract](https://github.com/deanmalmgren/textract) - Extract text from any document, Word, PowerPoint, PDFs, etc.\r\n\r\n## Forms\r\n\r\n*Libraries for working with forms.*\r\n\r\n* [WTForms](http://wtforms.readthedocs.org/) - A flexible forms validation and rendering library.\r\n* [WTForms-JSON](http://wtforms-json.readthedocs.org/) - A WTForms extension for JSON data handling.\r\n* [Deform](http://deform.readthedocs.org/) - Python HTML form generation library influenced by the formish form generation library.\r\n* [django-bootstrap3](https://github.com/dyve/django-bootstrap3) - Bootstrap 3 integration with Django.\r\n* [django-crispy-forms](http://django-crispy-forms.readthedocs.org/) - A Django app which lets you create beautiful forms in a very elegant and DRY way.\r\n* [django-remote-forms](https://github.com/WiserTogether/django-remote-forms) - A platform independent Django form serializer.\r\n\r\n## Data Validation\r\n\r\n*Libraries for validating data. Used for forms in many cases.*\r\n\r\n* [voluptuous](https://github.com/alecthomas/voluptuous) - A Python data validation library. It is primarily intended for validating data coming into Python as JSON, YAML, etc.\r\n* [colander](http://docs.pylonsproject.org/projects/colander/) - A system for validating and deserializing data obtained via XML, JSON, an HTML form post or any other equally simple data serialization.\r\n* [schema](https://github.com/halst/schema) - A library for validating Python data structures.\r\n* [Schematics](https://github.com/schematics/schematics) - Data Structure Validation.\r\n* [kmatch](https://github.com/ambitioninc/kmatch) - A language for matching/validating/filtering Python dictionaries.\r\n* [valideer](https://github.com/podio/valideer) - Lightweight extensible data validation and adaptation library.\r\n\r\n## Anti-spam\r\n\r\n*Libraries for fighting spam.*\r\n\r\n* [Stopspam](https://github.com/phalt/stopspam) - Intelligent spam detection for Python.\r\n* [django-simple-spam-blocker](https://github.com/moqada/django-simple-spam-blocker) - Simple spam blocker for Django.\r\n* [django-simple-captcha](https://github.com/mbi/django-simple-captcha) - A simple and highly customizable Django app to add captcha images to any Django form.\r\n\r\n## Tagging\r\n\r\n*Libraries for tagging items.*\r\n\r\n* [django-taggit](https://github.com/alex/django-taggit) - Simple tagging for Django.\r\n\r\n## Admin Panels\r\n\r\n*Libraries for administrative interfaces.*\r\n\r\n* [Ajenti](https://github.com/Eugeny/ajenti) - The admin panel your servers deserve.\r\n* [Grappelli](http://grappelliproject.com) â€“ A jazzy skin for the Django Admin-Interface.\r\n* [django-suit](http://djangosuit.com/) - Alternative Django Admin-Interface (free only for Non-commercial use).\r\n* [django-xadmin](https://github.com/sshwsfc/django-xadmin) - Drop-in replacement of Django admin comes with lots of goodies.\r\n* [flask-admin](https://github.com/mrjoes/flask-admin) - Simple and extensible administrative interface framework for Flask.\r\n* [flower](https://github.com/mher/flower) - Real-time monitor and web admin for Celery.\r\n\r\n## Static Site Generator\r\n\r\n*Static site generator is a software that takes some text + templates as input and produces html files on the output.*\r\n\r\n* [Pelican](http://blog.getpelican.com/) - Uses Markdown or ReST for content and Jinja 2 for themes. Supports DVCS, Disqus. AGPL.\r\n* [Cactus](http://github.com/koenbok/Cactus/) â€“ Static site generator for designers.\r\n* [Hyde](https://hyde.github.com/) - Jinja2-based static web site generator.\r\n* [Nikola](http://www.getnikola.com/) - A static website and blog generator.\r\n* [Tags](http://tags.brace.io/) - The simplest static site generator.\r\n* [Tinkerer](http://tinkerer.me/) - Tinkerer is a blogging engine/.static website generator powered by Sphinx.\r\n\r\n## Processes and Threads\r\n\r\n*Libraries for woking with processes or threads*\r\n\r\n* [multiprocessing](https://docs.python.org/2/library/multiprocessing.html) - (Python standard library) Process-based \"threading\" interface.\r\n* [threading](https://docs.python.org/2/library/threading.html) - (Python standard library) Higher-level threading interface.\r\n* [envoy](https://github.com/kennethreitz/envoy) - Python Subprocesses for Humansâ„¢.\r\n* [sh](https://github.com/amoffat/sh) - A full-fledged [subprocess](https://docs.python.org/2/library/subprocess.html) replacement for Python.\r\n* [sarge](http://sarge.readthedocs.org/) - A wrapper for subprocess.\r\n\r\n## Concurrency and Networking\r\n\r\n*Libraries for concurrency and network programming.*\r\n\r\n* [asyncio](https://docs.python.org/3/library/asyncio.html) - (Python standard library in Python 3.4+) Asynchronous I/O, event loop, coroutines and tasks.\r\n* [gevent](http://www.gevent.org/) - A coroutine-based Python networking library that uses [greenlet](https://github.com/python-greenlet/greenlet).\r\n* [Twisted](https://twistedmatrix.com/trac/) - An event-driven networking engine.\r\n* [Tornado](http://www.tornadoweb.org/) - A Web framework and asynchronous networking library.\r\n* [pulsar](https://github.com/quantmind/pulsar) - Event-driven concurrent framework for Python.\r\n* [diesel](https://github.com/jamwt/diesel) - Greenlet-based event I/O Framework for Python.\r\n* [eventlet](http://eventlet.net/) - Asynchronous framework with WSGI support.\r\n* [pyzmq](http://zeromq.github.io/pyzmq/) - A Python wrapper for the 0MQ message library.\r\n* [txZMQ](https://github.com/smira/txZMQ) - Twisted based wrapper for the 0MQ message library.\r\n* [Crossbar](http://crossbar.io) - Open-source Unified Application Router (Websocket & WAMP for Python on Autobahn).\r\n\r\n## WebSocket\r\n\r\n*Libraries for woking with WebSocket.*\r\n\r\n* [AutobahnPython](https://github.com/tavendo/AutobahnPython) - WebSocket & WAMP for Python on Twisted and [asyncio](https://docs.python.org/3/library/asyncio.html).\r\n* [WebSocket-for-Python](https://github.com/Lawouach/WebSocket-for-Python) - WebSocket client and server library for Python 2 and 3 as well as PyPy.\r\n\r\n## WSGI Servers\r\n\r\n*WSGI-compatible web servers.*\r\n\r\n* [wsgiref](http://docs.python.org/library/wsgiref.html) - (Python standard library) WSGI reference implementation, single-threaded.\r\n* [Werkzeug](http://werkzeug.pocoo.org/) - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\r\n* [paste](http://pythonpaste.org/) - Multi-threaded, stable, tried and tested.\r\n* [rocket](http://pypi.python.org/pypi/rocket) - Multi-threaded.\r\n* [waitress](https://waitress.readthedocs.org/) - Multi-threaded, poweres Pyramid.\r\n* [netius](https://github.com/hivesolutions/netius) - Asynchronous, very fast.\r\n* [gunicorn](http://pypi.python.org/pypi/gunicorn) - Pre-forked, partly written in C.\r\n* [fapws3](http://www.fapws.org/) - Asynchronous (network side only), written in C.\r\n* [meinheld](http://pypi.python.org/pypi/meinheld) - Asynchronous, partly written in C.\r\n* [bjoern](http://pypi.python.org/pypi/bjoern) - Asynchronous, very fast and written in C.\r\n\r\n## RPC Servers\r\n\r\n*RPC-compatible servers.*\r\n\r\n* [SimpleXMLRPCServer](https://docs.python.org/2/library/simplexmlrpcserver.html) - (Python standard library) Simple XML-RPC server implementation, single-threaded.\r\n* [SimpleJSONRPCServer](https://github.com/joshmarshall/jsonrpclib/) - This library is an implementation of the JSON-RPC specification.\r\n* [zeroRPC](https://github.com/dotcloud/zerorpc-python) - zerorpc is a flexible RPC implementation based on [ZeroMQ](http://zeromq.org/) and [MessagePack](http://msgpack.org/).\r\n\r\n## Cryptography\r\n\r\n* [PyCrypto](https://www.dlitz.net/software/pycrypto/) - The Python Cryptography Toolkit.\r\n* [Paramiko](http://www.paramiko.org/) - A Python (2.6+, 3.3+) implementation of the SSHv2 protocol, providing both client and server functionality.\r\n* [cryptography](https://cryptography.io/) - A package designed to expose cryptographic primitives and recipes to Python developers.\r\n* [PyNacl](https://github.com/pyca/pynacl) - Python binding to the Networking and Cryptography (NaCl) library.\r\n* [hashids](https://github.com/davidaurelio/hashids-python) - Implementation of [hashids](http://hashids.org) in Python.\r\n* [Passlib](https://pythonhosted.org/passlib/) - Secure password storage/hashing library, very high level.\r\n\r\n## GUI\r\n\r\n*Libraries for working with graphical user interface applications.*\r\n\r\n* [PyQt](http://www.riverbankcomputing.co.uk/software/pyqt/intro) - Python bindings for the [Qt](http://qt-project.org/) cross-platform application and UI framework, with support for both Qt v4 and Qt v5 frameworks.\r\n* [PySide](http://qt-project.org/wiki/pyside) - Python bindings for the [Qt](http://qt-project.org/) cross-platform application and UI framework, supporting the Qt v4 framework.\r\n* [wxPython](http://wxpython.org/) - A blending of the wxWidgets C++ class library with the Python.\r\n* [kivy](http://kivy.org/) - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\r\n* [curses](https://docs.python.org/2/library/curses.html#module-curses) - Built-in wrapper for [ncurses](http://www.gnu.org/software/ncurses/) used to create terminal GUI applications.\r\n* [urwid](http://urwid.org/) - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\r\n* [pyglet](http://www.pyglet.org/) - A cross-platform windowing and multimedia library for Python.\r\n* [Tkinter](https://wiki.python.org/moin/TkInter) - Tkinter is Python's de-facto standard GUI package.\r\n* [enaml](https://github.com/nucleic/enaml) - Creating beautiful user-interfaces with Declaratic Syntax like QML.\r\n* [Toga](https://github.com/pybee/toga) - A Python native, OS native GUI toolkit.\r\n\r\n## Game Development\r\n\r\n*Awesome game development libraries.*\r\n\r\n* [Pygame](http://www.pygame.org/news.html) - Pygame is a set of Python modules designed for writing games.\r\n* [Cocos2d](http://cocos2d.org/) - cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications. It is based on pyglet.\r\n* [PySDL2](http://pysdl2.readthedocs.org/) - A ctypes based wrapper for the SDL2 library.\r\n* [Panda3D](https://www.panda3d.org/) - 3D game engine developed by Disney and maintained by Carnegie Mellon's Entertainment Technology Center. Written in C++, completely wrapped in Python.\r\n* [PyOgre](http://www.ogre3d.org/tikiwiki/PyOgre) - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\r\n* [PyOpenGL](http://pyopengl.sourceforge.net/) - Python ctypes bindings for OpenGL and it's related APIs.\r\n* [PySFML](http://www.python-sfml.org/) - Python bindings for [SFML](http://www.sfml-dev.org/)\r\n* [RenPy](http://www.renpy.org/) - A Visual Novel engine.\r\n\r\n## Logging\r\n\r\n*Libraries for generating and working with log files.*\r\n\r\n* [logging](https://docs.python.org/2/library/logging.html) - (Python standard library) Logging facility for Python.\r\n* [logbook](http://pythonhosted.org/Logbook/) -  Logging replacement for Python.\r\n* [Sentry](https://pypi.python.org/pypi/sentry) - A realtime logging and aggregation server.\r\n* [Raven](http://raven.readthedocs.org/) - The Python client for Sentry.\r\n\r\n## Testing\r\n\r\n*Libraries for testing codebases and generating test data.*\r\n\r\n* Testing Frameworks\r\n    * [unittest](https://docs.python.org/2/library/unittest.html) - (Python standard library) Unit testing framework.\r\n    * [nose](https://nose.readthedocs.org/) - nose extends unittest.\r\n    * [pytest](http://pytest.org/) - A mature full-featured Python testing tool.\r\n    * [mamba](https://nestorsalceda.github.io/mamba) - The definitive testing tool for Python. Born under the banner of BDD.\r\n    * [contexts](https://github.com/benjamin-hodgson/Contexts) - A BDD framework for Python 3.3+. Inspired by C#'s `Machine.Specifications`.\r\n    * [pyshould](https://github.com/drslump/pyshould) - Should style asserts based on [PyHamcrest](https://github.com/hamcrest/PyHamcrest).\r\n    * [pyvows](http://heynemann.github.io/pyvows/) - BDD style testing for Python. Inspired by [Vows.js](http://vowsjs.org/).\r\n* Web Testing\r\n    * [Selenium](https://pypi.python.org/pypi/selenium) - Python bindings for [Selenium](http://www.seleniumhq.org/) WebDriver.\r\n    * [splinter](http://splinter.cobrateam.info/) - Open source tool for testing web applications.\r\n    * [locust](https://github.com/locustio/locust) - Scalable user load testing tool written in Python.\r\n    * [sixpack](https://github.com/seatgeek/sixpack) - A language-agnostic A/B Testing framework.\r\n* Mock\r\n    * [mock](https://pypi.python.org/pypi/mock) - A Python Mocking and Patching Library for Testing.\r\n    * [responses](https://github.com/dropbox/responses) - A utility library for mocking out the requests Python library.\r\n    * [doublex](https://pypi.python.org/pypi/doublex) - Powerful test doubles framework for Python.\r\n    * [freezegun](https://github.com/spulec/freezegun) - Travel through time by mocking the datetime module.\r\n    * [httpretty](http://falcao.it/HTTPretty/) - HTTP request mock tool for Python.\r\n    * [httmock](https://github.com/patrys/httmock) - A mocking library for requests for Python 2.6+ and 3.2+.\r\n* Code Coverage\r\n    * [coverage](https://pypi.python.org/pypi/coverage) - Code coverage measurement.\r\n* Fake Data\r\n    * [faker](http://www.joke2k.net/faker/) - A Python package that generates fake data.\r\n    * [mixer](https://mixer.readthedocs.org) - Generating fake data and creating random fixtures for testing in Django ORM, SQLAlchemy, Peewee, MongoEngine, Pony ORM and etc.\r\n    * [model_mommy](https://model-mommy.readthedocs.org/) - Creating random fixtures for testing in Django.\r\n    * [ForgeryPy](https://pypi.python.org/pypi/ForgeryPy/0.1) - An easy to use forged data generator for Python. It's a port of [forgery](http://rubygems.org/gems/forgery).\r\n* Error Handler\r\n    * [FuckIt.py](https://github.com/ajalt/fuckitpy) - FuckIt.py uses state-of-the-art technology to make sure your Python code runs whether it has any right to or not.\r\n\r\n## Code Analysis and Linter\r\n\r\n*Libraries and tools for analysing, parsing and manipulation codebases.*\r\n\r\n* Code Analysis\r\n    * [pysonar2](https://github.com/yinwang0/pysonar2) - A type inferencer and indexer for Python.\r\n    * [pycallgraph](https://github.com/gak/pycallgraph) - A library that visualises the flow (call graph) of your Python application.\r\n    * [code2flow](https://github.com/scottrogowski/code2flow) - Turn your Python and JavaScript code into DOT flowcharts.\r\n* Linter\r\n    * [Flake8](https://pypi.python.org/pypi/flake8) - The modular source code checker: pep8, pyflakes and co.\r\n    * [pylama](https://pylama.readthedocs.org/) - Code audit tool for Python and JavaScript.\r\n    * [Pylint](http://www.pylint.org/) - A source code analyzer.\r\n\r\n## Debugging Tools\r\n\r\n*Libraries for debugging code.*\r\n\r\n* [pdb](https://docs.python.org/2/library/pdb.html) - (Python standard library) The Python Debugger.\r\n* [ipdb](https://pypi.python.org/pypi/ipdb) - IPython-enabled pdb.\r\n* [winpdb](http://winpdb.org/) - A Platform Independent Python Debugger with GUI.\r\n* [pudb](https://pypi.python.org/pypi/pudb) â€“ A full-screen, console-based Python debugger.\r\n* [pyringe](https://github.com/google/pyringe) - Debugger capable of attaching to and injecting code into Python processes.\r\n* [python-statsd](https://github.com/WoLpH/python-statsd) - Python Client for the [statsd](https://github.com/etsy/statsd/) server.\r\n* [memory_profiler](https://github.com/fabianp/memory_profiler) - Monitor Memory usage of Python code.\r\n* [django-debug-toolbar](https://github.com/django-debug-toolbar/django-debug-toolbar) - Display various debug information about the current request/response.\r\n* [django-devserver](https://github.com/dcramer/django-devserver) - A drop-in replacement for Django's runserver.\r\n\r\n## Science and Data Analysis\r\n\r\n*Libraries for scientific computing and data analyzing.*\r\n\r\n* [SciPy](http://www.scipy.org/) - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\r\n* [NumPy](http://www.numpy.org/) - A fundamental package for scientific computing with Python.\r\n* [Numba](http://numba.pydata.org/) - Python JIT (just in time) complier to LLVM aimed at scientific Python by the developers of Cython and NumPy.\r\n* [NetworkX](https://networkx.github.io/) - A high-productivity software for complex networks.\r\n* [Pandas](http://pandas.pydata.org/) - A library providing high-performance, easy-to-use data structures and data analysis tools.\r\n* [Open Mining](https://github.com/avelino/mining) - Business Intelligence (BI) in Python (Pandas web interface)\r\n* [PyMC](https://github.com/pymc-devs/pymc) - Markov Chain Monte Carlo sampling toolkit.\r\n* [zipline](https://github.com/quantopian/zipline) - A Pythonic algorithmic trading library.\r\n* [PyDy](https://pydy.org/) - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion based around NumPy, SciPy, IPython, and matplotlib.\r\n* [SymPy](https://github.com/sympy/sympy) - A Python library for symbolic mathematics.\r\n* [statsmodels](https://github.com/statsmodels/statsmodels) - Statistical modeling and econometrics in Python.\r\n* [astropy](http://www.astropy.org/) - A community Python library for Astronomy.\r\n* [orange](http://orange.biolab.si/) - Data mining, data visualization, analysis and machine learning through visual programming or Python scripting.\r\n* [RDKit](http://www.rdkit.org/) - Cheminformatics and Machine Learning Software.\r\n* [Open Babel](http://openbabel.org/wiki/Main_Page) - A chemical toolbox designed to speak the many languages of chemical data.\r\n* [cclib](http://cclib.github.io/) - A library for parsing and interpreting the results of computational chemistry packages.\r\n* [Biopython](http://biopython.org/wiki/Main_Page) - Biopython is a set of freely available tools for biological computation.\r\n* [bccb](https://github.com/chapmanb/bcbb) - Collection of useful code related to biological analysis.\r\n* [bcbio-nextgen](https://github.com/chapmanb/bcbio-nextgen) - A toolkit providing best-practice pipelines for fully automated high throughput sequencing analysis.\r\n\r\n\r\n\r\n## Data Visualization\r\n\r\n*Libraries for visualizing data. See: [awesome-javascript's Data Visualization section](https://github.com/sorrycc/awesome-javascript#data-visualization).*\r\n\r\n* [matplotlib](http://matplotlib.org/) - A Python 2D plotting library.\r\n* [bokeh](https://github.com/ContinuumIO/bokeh) - Interactive Web Plotting for Python.\r\n* [plotly](https://plot.ly/python) - Collaborative web plotting for Python and matplotlib.\r\n* [vincent](https://github.com/wrobstory/vincent) - A Python to Vega translator.\r\n* [d3py](https://github.com/mikedewar/d3py) - A plottling library for Python, based on [D3.js](http://d3js.org/).\r\n* [ggplot](https://github.com/yhat/ggplot) - Same API as ggplot2 for R.\r\n* [Kartograph.py](https://github.com/kartograph/kartograph.py) - Rendering beautiful SVG maps in Python.\r\n* [pygal](http://pygal.org/) - A Python SVG Charts Creator.\r\n* [pygraphviz](https://pypi.python.org/pypi/pygraphviz) - Python interface to [Graphviz](http://www.graphviz.org/).\r\n\r\n## Computer Vision\r\n\r\n*Libraries for computer vision.*\r\n\r\n* [OpenCV](http://opencv.org/) - Open Source Computer Vision Library.\r\n* [SimpleCV](http://simplecv.org/) - An open source framework for building computer vision applications.\r\n\r\n## Machine Learning\r\n\r\n*Libraries for Machine Learning. See: [awesome-machine-learning](https://github.com/josephmisiti/awesome-machine-learning#python).*\r\n\r\n* [scikit-learn](http://scikit-learn.org/) - A Python module for machine learning built on top of SciPy.\r\n* [pattern](https://github.com/clips/pattern) - Web mining module for Python.\r\n* [NuPIC](https://github.com/numenta/nupic) - Numenta Platform for Intelligent Computing.\r\n* [Pylearn2](https://github.com/lisa-lab/pylearn2) - A Machine Learning library based on [Theano](https://github.com/Theano/Theano).\r\n* [hebel](https://github.com/hannes-brt/hebel) - GPU-Accelerated Deep Learning Library in Python.\r\n* [gensim](https://github.com/piskvorky/gensim) - Topic Modelling for Humans.\r\n* [PyBrain](https://github.com/pybrain/pybrain) - Another Python Machine Learning Library.\r\n* [Crab](https://github.com/muricoca/crab) - A ï¬‚exible, fast recommender engine.\r\n* [python-recsys](https://github.com/ocelma/python-recsys) - A Python library for implementing a Recommender System.\r\n\r\n## MapReduce\r\n\r\n*Framworks and libraries for MapReduce.*\r\n\r\n* [PySpark](http://spark.apache.org/docs/latest/programming-guide.html) - The Spark Python API.\r\n* [dpark](https://github.com/douban/dpark) - Python clone of Spark, a MapReduce alike framework in Python.\r\n* [luigi](https://github.com/spotify/luigi) - A module that helps you build complex pipelines of batch jobs.\r\n* [mrjob](https://github.com/Yelp/mrjob) - Run MapReduce jobs on Hadoop or Amazon Web Services.\r\n* [dumbo](https://github.com/klbostee/dumbo) - Python module that allows one to easily write and run Hadoop programs.\r\n* [streamparse](https://github.com/Parsely/streamparse) - Run Python code against real-time streams of data. Integrates with [Apache Storm](https://storm.incubator.apache.org/).\r\n\r\n## Functional Programming\r\n\r\n* [fn.py](https://github.com/kachayev/fn.py) - Functional programming in Python: implementation of missing features to enjoy FP.\r\n* [funcy](https://github.com/Suor/funcy) - A fancy and practical functional tools.\r\n* [Toolz](https://github.com/pytoolz/toolz) - A collection of functional utilities for iterators, functions, and dictionaries.\r\n* [CyToolz](https://github.com/pytoolz/cytoolz/) - Cython implementation of Toolz: High performance functional utilities.\r\n\r\n## Third-party APIs\r\n\r\n*Libraries for accessing third party services APIs. See: [List of Python API Wrappers and Libraries](https://github.com/realpython/list-of-python-api-wrappers).*\r\n\r\n* [apache-libcloud](https://libcloud.apache.org/) - One Python library for all clouds.\r\n* [boto](https://github.com/boto/boto) - Python interface to Amazon Web Services.\r\n* [twython](https://github.com/ryanmcgrath/twython) - A Python wrapper for the Twitter API.\r\n* [soundcloud-python](https://github.com/soundcloud/soundcloud-python) - A Python wrapper around the Soundcloud API.\r\n* [google-api-python-client](https://github.com/google/google-api-python-client) - Google APIs Client Library for Python.\r\n* [gspread](https://github.com/burnash/gspread) - Google Spreadsheets Python API.\r\n* [facebook-sdk](https://github.com/pythonforfacebook/facebook-sdk) - Facebook Platform Python SDK.\r\n* [facepy](https://github.com/jgorset/facepy) - Facepy makes it really easy to interact with Facebook's Graph API\r\n* [Wikipedia](https://wikipedia.readthedocs.org/) - A Pythonic wrapper for the Wikipedia API.\r\n* [python-instagram](https://github.com/Instagram/python-instagram) - A Python Client for Instagram API.\r\n* [gmail](https://github.com/charlierguo/gmail) - A Pythonic interface for Gmail.\r\n* [praw](https://github.com/praw-dev/praw) - A Python wrapper for the Reddit API.\r\n* [linkedin](https://github.com/ozgur/python-linkedin) - A Python interface for LinkedIn.\r\n\r\n## DevOps Tools\r\n\r\n*Software and libraries for DevOps.*\r\n\r\n* [OpenStack](http://www.openstack.org/) - Open source software for building private and public clouds.\r\n* [Ansible](http://www.ansible.com/) - An IT automation tool.\r\n* [SaltStack](http://www.saltstack.com/community/) - Infrastructure automation and management system.\r\n* [Fabric](http://www.fabfile.org/) - Tool for streamlining the use of SSH for application deployment or systems administration tasks.\r\n* [Fabtools](https://github.com/ronnix/fabtools) - Tools for writing awesome Fabric files.\r\n* [cuisine](https://github.com/sebastien/cuisine) - Chef-like functionality for Fabric.\r\n* [psutil](https://github.com/giampaolo/psutil) - A cross-platform process and system utilities module.\r\n* [pexpect](https://github.com/pexpect/pexpect) - A Python module for controlling interactive programs in a pseudo-terminal like GNU expect.\r\n* [provy](https://github.com/python-provy/provy) - An easy-to-use provisioning system in Python.\r\n* [honcho](https://github.com/nickstenning/honcho) - A Python port of [Foreman](https://github.com/ddollar/foreman), a tool for managing Procfile-based applications.\r\n* [gunnery](https://github.com/gunnery/gunnery) - Multipurpose task execution tool for distributed systems with web-based interface.\r\n\r\n## Job Scheduler\r\n\r\n*Libraries for scheduling jobs.*\r\n\r\n* [APScheduler](http://apscheduler.readthedocs.org/) - A light but powerful in-process task scheduler that lets you schedule functions.\r\n* [django-schedule](https://github.com/thauber/django-schedule) - A calendaring app for Django.\r\n* [doit](http://pydoit.org/) - A task runner/build tool.\r\n* [Joblib](http://pythonhosted.org/joblib/index.html) - A set of tools to provide lightweight pipelining in Python.\r\n* [Plan](https://github.com/fengsp/plan) - Writing crontab file in Python like a charm.\r\n* [Spiff](https://github.com/knipknap/SpiffWorkflow) - A powerful workflow engine implemented in pure Python.\r\n* [schedule](https://github.com/dbader/schedule) - Python job scheduling for humans.\r\n* [TaskFlow](http://docs.openstack.org/developer/taskflow/) - A Python library that helps to make task execution easy, consistent and reliable.\r\n\r\n## Foreign Function Interface\r\n\r\n*Libraries for providing foreign function interface.*\r\n\r\n* [ctypes](https://docs.python.org/2/library/ctypes.html) - (Python standard library) Foreign Function Interface for Python calling C code.\r\n* [cffi](https://pypi.python.org/pypi/cffi) - Foreign Function Interface for Python calling C code.\r\n* [SWIG](http://www.swig.org/Doc1.3/Python.html) - Simplified Wrapper and Interface Generator.\r\n* [PyCUDA](http://mathema.tician.de/software/pycuda/) - A Python wrapper for Nvidia's CUDA API.\r\n\r\n## High Performance\r\n\r\n*Libraries for making Python faster.*\r\n\r\n* [Cython](http://cython.org/) - Optimizing Static Complier for Python. Uses type mixins to compile Python into C or C++ modules resulting in large performance gains.\r\n* [PyPy](http://pypy.org/) - An implementation of Python in Python. The interpreter uses black magic to make Python very fast without having to add in additional type information.\r\n* [Stackless Python](http://www.stackless.com/) - An enhanced version of the Python.\r\n* [Pyston](https://github.com/dropbox/pyston) - A Python implementation built using LLVM and modern JIT techniques with the goal of achieving good performance.\r\n\r\n## Microsoft Windows\r\n\r\n*Python programming on Microsoft Windows.*\r\n\r\n* [pythonlibs](http://www.lfd.uci.edu/~gohlke/pythonlibs/) - Unofficial Windows(32/64-bit) binaries for Python extension packages\r\n* [Python(x,y)](https://code.google.com/p/pythonxy/) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\r\n* [spyder](https://code.google.com/p/spyderlib/) - IDE for the Python language with advanced editing, interactive testing, debugging and introspection features (also comes with Anaconda).\r\n\r\n## Network Virtualization and SDN\r\n\r\n*Tools and libraries for Virtual Networking and SDN (Software Defined Networking).*\r\n\r\n* [Mininet](http://mininet.org/) - A popular network emulator and API written in Python.\r\n* [POX](http://www.noxrepo.org/pox/about-pox/) - An open source development platform for Python-based Software Defined Networking (SDN) control applications, such as OpenFlow SDN controllers.\r\n* [Pyretic](http://frenetic-lang.org/pyretic/) - A member of the Frenetic family of SDN programming languages that provides powerful abstractions over network switches or emulators.\r\n* [SDX Platform](https://github.com/sdn-ixp/internet2award) - SDN based IXP implementation that leverages Mininet, POX and Pyretic.\r\n\r\n## Hardware\r\n\r\n*Libraries for programming with hardware.*\r\n\r\n* [wifi](https://wifi.readthedocs.org/) - A Python library and command line tool for working with WiFi on Linux.\r\n* [scapy](http://www.secdev.org/projects/scapy/) - A brilliant packet manipulation library.\r\n* [ino](http://inotool.org/) - Command line toolkit for working with [Arduino](http://www.arduino.cc/).\r\n* [Pyro](http://pyrorobotics.com/) - Python Robotics.\r\n\r\n## Miscellaneous\r\n\r\n*Useful libraries or tools that don't fit in the categories above.*\r\n\r\n* [pluginbase](https://github.com/mitsuhiko/pluginbase) - A simple but flexible plugin system for Python.\r\n* [itsdangerous](https://github.com/mitsuhiko/itsdangerous) - Various helpers to pass trusted data to untrusted environments.\r\n* [blinker](https://github.com/jek/blinker) - A fast Python in-process signal/event dispatching system.\r\n\r\n## Algorithms and Design Patterns\r\n\r\n*Collections of algorithms and design patterns.*\r\n\r\n* [python-patterns](https://github.com/faif/python-patterns) - A collection of design patterns in Python.\r\n* [algorithms](https://github.com/nryoung/algorithms) - module of algorithms for Python.\r\n\r\n## Editor Plugins\r\n\r\n*Plugins for editors and IDEs.*\r\n\r\n* Vim\r\n    * [Python-mode](https://github.com/klen/python-mode) - An all in one plugin for turning Vim into a Python IDE.\r\n    * [Jedi-vim](https://github.com/davidhalter/jedi-vim) - Vim bindings for the [Jedi](https://github.com/davidhalter/jedi) autocompletion library for Python.\r\n* Emacs\r\n    * [Elpy](https://github.com/jorgenschaefer/elpy) - Emacs Python Development Environment.\r\n* Sublime Text\r\n    * [SublimeJEDI](https://github.com/srusskih/SublimeJEDI) - A Sublime Text plugin to the awesome autocomplete library [Jedi](https://github.com/davidhalter/jedi).\r\n    * [Anaconda](https://github.com/DamnWidget/anaconda) - Anaconda turns your Sublime Text 3 in a full featured Python development IDE.\r\n    * [Djaneiro](https://github.com/squ1b3r/Djaneiro) - Django support for Sublime Text.\r\n* Atom\r\n    * [Linter](https://github.com/AtomLinter/Linter) - A static code analysis tool for Atom.\r\n    * [Linter-flake8](https://github.com/AtomLinter/linter-flake8) - An addon to `linter`, that acts as an interface for `flake8`.\r\n    * [virtualenv](https://github.com/jhutchins/virtualenv) - Atom package for virtualenv management.\r\n\r\n# Resources\r\n\r\nWhere to discover new Python libraries.\r\n\r\n## Websites\r\n\r\n* [r/Python](http://www.reddit.com/r/python) - News about Python.\r\n* [Python 3 Wall of Superpowers](http://python3wos.appspot.com/) - Too many popular Python packages don't support Python 3.\r\n* [Trending Python repositories on GitHub today](https://github.com/trending?l=python) - Good place to find new Python libraries.\r\n* [CoolGithubProjects](http://coolgithubprojects.com/) - Sharing cool github projects just got easier!\r\n* [Full Stack Python](http://www.fullstackpython.com/) - Plain English explanations for every layer of the Python web application stack.\r\n* [Django Packages](https://www.djangopackages.com/) - A directory of reusable apps, sites, tools, and more for Django projects.\r\n\r\n## Weekly\r\n\r\n* [Pycoder's Weekly](http://pycoders.com/) - A free weekly newsletter, on Fridays, for those interested in Python development and various topics around Python.\r\n* [Python Weekly](http://www.pythonweekly.com/) - A free weekly newsletter featuring curated news, articles, new releases, jobs etc related to Python.\r\n\r\n## Twitter\r\n\r\n* [@pypi](https://twitter.com/pypi)\r\n* [@planetpython](https://twitter.com/planetpython)\r\n* [@getpy](https://twitter.com/getpy)\r\n* [@pycoders](https://twitter.com/pycoders)\r\n* [@PythonWeekly](https://twitter.com/PythonWeekly)\r\n* [@pythontrending](https://twitter.com/pythontrending)\r\n\r\n# Other Awesome Lists\r\n\r\nList of lists.\r\n\r\n* Python\r\n    * [pycrumbs](https://github.com/kirang89/pycrumbs/blob/master/pycrumbs.md)\r\n    * [pythonidae](https://github.com/svaksha/pythonidae)\r\n    * [python-github-projects](https://github.com/checkcheckzz/python-github-projects)\r\n    * [python_reference](https://github.com/rasbt/python_reference)\r\n    * [easy-python](http://easy-python.readthedocs.org/)\r\n* Monty\r\n    * [awesome-awesomeness](https://github.com/bayandin/awesome-awesomeness)\r\n    * [lists](https://github.com/jnv/lists)\r\n\r\n# [Contributing](https://github.com/vinta/awesome-python/blob/master/CONTRIBUTING.md)\r\n\r\nYour contributions are always welcome!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}